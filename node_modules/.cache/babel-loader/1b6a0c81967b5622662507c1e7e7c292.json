{"remainingRequest":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/babel-loader/lib/index.js!/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marktiddy/Developer/Career Foundry/Tasks/todo/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/src/App.vue","mtime":1581781083226},{"path":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marktiddy/Developer/Career Foundry/Tasks/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvZG9zOiBbXSwKICAgICAgLy9hIHRleHQgaW5wdXQgZm9yIGFkZGluZyB0b2RvcwogICAgICBjdXJyZW50VG9kbzogIiIsCiAgICAgIHVwZGF0aW5nVG9kbzogIiIsCiAgICAgIGJvb2xDaGVjazogZmFsc2UKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2RvcyIpKSB0aGlzLnRvZG9zID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9kb3MiKSk7CiAgfSwKICB3YXRjaDogewogICAgdG9kb3M6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidG9kb3MiLCBKU09OLnN0cmluZ2lmeSh0aGlzLnRvZG9zKSk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFRvZG86IGZ1bmN0aW9uIGFkZFRvZG8oKSB7CiAgICAgIHRoaXMudG9kb3MucHVzaCh7CiAgICAgICAgaWQ6IHRoaXMudG9kb3MubGVuZ3RoLAogICAgICAgIGxhYmVsOiB0aGlzLmN1cnJlbnRUb2RvLAogICAgICAgIGNvbXBsZXRlZDogZmFsc2UsCiAgICAgICAgaXNCZWluZ0VkaXRlZDogZmFsc2UKICAgICAgfSk7CiAgICAgIHRoaXMuY3VycmVudFRvZG8gPSAiIjsKICAgIH0sCiAgICByZW1vdmVUb2RvOiBmdW5jdGlvbiByZW1vdmVUb2RvKHRvZG8pIHsKICAgICAgdmFyIGluZGV4ID0gdGhpcy50b2Rvcy5pbmRleE9mKHRvZG8pOwogICAgICB0aGlzLnRvZG9zLnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgdXBkYXRlQ2hlY2s6IGZ1bmN0aW9uIHVwZGF0ZUNoZWNrKHRvZG8pIHsKICAgICAgdmFyIGluZGV4ID0gdGhpcy50b2Rvcy5pbmRleE9mKHRvZG8pOwogICAgICB0aGlzLnRvZG9zW2luZGV4XS5jb21wbGV0ZWQgPSAhdG9kby5jb21wbGV0ZWQ7CiAgICB9LAogICAgc2V0RWRpdGluZzogZnVuY3Rpb24gc2V0RWRpdGluZyh0b2RvKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMudG9kb3MuaW5kZXhPZih0b2RvKTsKICAgICAgdGhpcy50b2Rvc1tpbmRleF0uaXNCZWluZ0VkaXRlZCA9ICF0aGlzLnRvZG9zW2luZGV4XS5pc0JlaW5nRWRpdGVkOwogICAgICB0aGlzLnVwZGF0aW5nVG9kbyA9IHRoaXMudG9kb3NbaW5kZXhdLmxhYmVsOwogICAgfSwKICAgIHVwZGF0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZVRvZG8odG9kbykgewogICAgICB2YXIgaW5kZXggPSB0aGlzLnRvZG9zLmluZGV4T2YodG9kbyk7CiAgICAgIHRoaXMudG9kb3NbaW5kZXhdLmxhYmVsID0gdGhpcy51cGRhdGluZ1RvZG87CiAgICAgIHRoaXMudG9kb3NbaW5kZXhdLmlzQmVpbmdFZGl0ZWQgPSAhdGhpcy50b2Rvc1tpbmRleF0uaXNCZWluZ0VkaXRlZDsKICAgICAgdGhpcy51cGRhdGluZ3RvZG8gPSAiIjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA;AACA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EACA,KAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA;AADA,GAdA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,EAAA,EAAA,KAAA,KAAA,CAAA,MADA;AAEA,QAAA,KAAA,EAAA,KAAA,WAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,aAAA,EAAA;AAJA,OAAA;AAMA,WAAA,WAAA,GAAA,EAAA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,IAVA,EAUA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAbA;AAcA,IAAA,WAdA,uBAcA,IAdA,EAcA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,SAAA,GAAA,CAAA,IAAA,CAAA,SAAA;AACA,KAjBA;AAkBA,IAAA,UAlBA,sBAkBA,IAlBA,EAkBA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,aAAA,GAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA,aAAA;AACA,WAAA,YAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA,KAAA;AACA,KAtBA;AAuBA,IAAA,UAvBA,sBAuBA,IAvBA,EAuBA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,KAAA,GAAA,KAAA,YAAA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,aAAA,GAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA,aAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA;AA5BA;AAvBA,CAAA","sourcesContent":["<template>\n  <div>\n    <md-toolbar class=\"md-primary\">\n      <h3 class=\"md-title\">\n        <i class=\"material-icons\">\n          done\n        </i>\n        Tick List\n      </h3>\n    </md-toolbar>\n    <div class=\"main-content\">\n      <p>\n        Welcome to Tick List. Start off by adding something you want to get\n        done.\n      </p>\n      <!--new todo input code -->\n      <md-field>\n        <md-input\n          v-model=\"currentTodo\"\n          @keydown.enter=\"addTodo()\"\n          placeholder=\"Add a todo\"\n        />\n      </md-field>\n      <!--Code to let users add a todo-->\n\n      <div\n        class=\"md-layout md-gutter md-medium-size-33 md-small-size-50 md-xsmall-size-100\"\n      >\n        <div\n          class=\"md-layout-item todo-card\"\n          v-for=\"todo in todos\"\n          :key=\"todo.id\"\n        >\n          <md-card md-with-hover>\n            <md-card-content>\n              <div class=\"grid-container\">\n                <div class=\"grid-item_check\">\n                  <md-checkbox\n                    v-model=\"todo.isCompleted\"\n                    @click=\"updateCheck(todo)\"\n                  ></md-checkbox>\n                </div>\n                <div class=\"grid-item\">\n                  <span class=\"todo-item\">{{ todo.label }}</span>\n                  <span :class=\"{ hide: !todo.isBeingEdited }\">\n                    <md-field>\n                      <md-input\n                        v-model=\"updatingTodo\"\n                        @keydown.enter=\"updateTodo(todo)\"\n                        :placeholder=\"todo.label\"\n                        :class=\"{ hide: !todo.isBeingEdited }\"\n                      />\n                      <span\n                        class=\"md-caption\"\n                        :class=\"{ hide: !todo.isBeingEdited }\"\n                        >Update your item</span\n                      >\n                    </md-field></span\n                  >\n                </div>\n                <div class=\"grid-item\">\n                  <button class=\"edit-button\" @click=\"setEditing(todo)\">\n                    <i class=\"material-icons\">edit</i>\n                  </button>\n                </div>\n              </div> </md-card-content\n            ><md-card-actions md-alignment=\"left\">\n              <md-button class=\"md-raised md-primary\" @click=\"removeTodo(todo)\"\n                >Delete</md-button\n              >\n            </md-card-actions></md-card\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      todos: [],\n      //a text input for adding todos\n      currentTodo: \"\",\n      updatingTodo: \"\",\n      boolCheck: false\n    };\n  },\n  mounted() {\n    if (localStorage.getItem(\"todos\"))\n      this.todos = JSON.parse(localStorage.getItem(\"todos\"));\n  },\n  watch: {\n    todos: {\n      handler() {\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos));\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    addTodo() {\n      this.todos.push({\n        id: this.todos.length,\n        label: this.currentTodo,\n        completed: false,\n        isBeingEdited: false\n      });\n      this.currentTodo = \"\";\n    },\n    removeTodo(todo) {\n      var index = this.todos.indexOf(todo);\n      this.todos.splice(index, 1);\n    },\n    updateCheck(todo) {\n      var index = this.todos.indexOf(todo);\n      this.todos[index].completed = !todo.completed;\n    },\n    setEditing(todo) {\n      var index = this.todos.indexOf(todo);\n      this.todos[index].isBeingEdited = !this.todos[index].isBeingEdited;\n      this.updatingTodo = this.todos[index].label;\n    },\n    updateTodo(todo) {\n      var index = this.todos.indexOf(todo);\n      this.todos[index].label = this.updatingTodo;\n      this.todos[index].isBeingEdited = !this.todos[index].isBeingEdited;\n      this.updatingtodo = \"\";\n    }\n  }\n};\n</script>\n\n<style>\n.main-content {\n  padding: 20px;\n}\n\n.hide {\n  display: none;\n  visibility: hidden;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: 0.5fr 2fr 0.5fr;\n}\n\n.grid-item {\n  padding: 10px;\n}\n\n.grid-item_check {\n  margin-top: -5px;\n}\n\n.todos {\n  list-style: none;\n  line-height: 3em;\n}\n\n.todo-item {\n  font-size: 18px;\n}\n\n.todo-card {\n  margin-bottom: 20px;\n}\n\n.edit-button {\n  border: 0px;\n}\n.edit-button:hover {\n  opacity: 0.8;\n  cursor: pointer;\n}\n</style>\n\n<!--\n<div class=\"main-content\">\n      <p>\n        Welcome to Tick List. Start off by adding something you want to get\n        done.\n      </p>\n      <md-field>\n        <md-input\n          v-model=\"currentTodo\"\n          @keydown.enter=\"addTodo()\"\n          placeholder=\"Add a todo\"\n        />\n      </md-field>\n      <ul class=\"todos\">\n        <li v-for=\"todo in todos\" :key=\"todo.id\">\n          <input type=\"checkbox\" @click=\"updateCheck(todo)\" />\n          <label\n            @dblclick=\"setEditing(todo)\"\n            :class=\"{ hide: todo.isBeingEdited }\"\n            >{{ todo.label }}</label\n          >\n          <input\n            type=\"text\"\n            v-model=\"updatingTodo\"\n            :placeholder=\"todo.label\"\n            @keydown.enter=\"updateTodo(todo)\"\n            :class=\"{ hide: !todo.isBeingEdited }\"\n          />\n          <button @click=\"removeTodo(todo)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n\n-->\n"],"sourceRoot":"src"}]}